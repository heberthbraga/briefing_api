---
openapi: 3.0.1
info:
  title: Briefing API V1
  version: v1
paths:
  "/api/v1/registrations":
    post:
      summary: Create a new user registration
      tags:
      - Registrations
      parameters: []
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: NQlmGnqR
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                    nullable: true
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '1'
                        name:
                          type: string
                          example: ROLE_CUSTOMER
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: err.schema.validation
                  detail:
                    type: string
                    example: Request Schema Validation Error
                  status:
                    type: integer
                    example: 422
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                        details:
                          type: array
                          items:
                            type: string
                            example: Email has an invalid format
                required:
                - code
                - detail
                - status
                - data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                first_name:
                  type: string
                last_name:
                  type: string
                  nullable: true
                password:
                  type: string
                  minLength: 8
                password_confirmation:
                  type: string
                account_type:
                  type: string
                  enum:
                  - CUSTOMER
                  - PRODUCT_OWNER
              required:
              - email
              - first_name
              - password
              - password_confirmation
              - account_type
  "/api/v1/sessions/basic":
    post:
      summary: Authenticate user with basic credentials
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                required:
                - access_token
                - refresh_token
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: err.authentication
                  detail:
                    type: string
                    example: Failed to authenticate
                  status:
                    type: integer
                    example: 401
                  data:
                    type: array
                    items:
                      type: object
                    example: []
                required:
                - code
                - detail
                - status
                - data
        '422':
          description: Schema Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: err.schema.validation
                  detail:
                    type: string
                    example: Request Schema Validation Error
                  status:
                    type: integer
                    example: 422
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                        details:
                          type: array
                          items:
                            type: string
                            example: Email has an invalid format
                required:
                - code
                - detail
                - status
                - data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/api/v1/users":
    get:
      summary: Retrieve a list of users
      tags:
      - Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Users list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: NQlmGnqR
                    email:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                      nullable: true
                    roles:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: '1'
                          name:
                            type: string
                            example: ROLE_CUSTOMER
        '403':
          description: Authorization failed when user does not have privileges
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: err.forbidden
                  detail:
                    type: string
                    example: You are not authorized to access this resource.
                  status:
                    type: integer
                    example: 403
                  data:
                    type: array
                    items:
                      type: object
                    example: []
                required:
                - code
                - detail
                - status
                - data
servers:
- url: http://{defaultHost}
  description: Local server
  variables:
    defaultHost:
      default: localhost:3001
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
